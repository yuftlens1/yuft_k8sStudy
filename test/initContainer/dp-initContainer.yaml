apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  generation: 2
  labels:
    app: nginx
  name: nginx
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx
    spec:
      initContainers: # 初始化容器，在容器启动之前执行的一些初始化操作
      - name: initcontainer
        image: nginx
        imagePullPolicy: IfNotPresent
        volumeMounts:              #挂载下面创建的share-volume本地数据卷到容器里/opt下
        - mountPath: /tmp
          name: sharev
        command:
        - sh
        - -c
        - mkdir /tmp/testinit && chmod 777 /tmp/testinit
      containers:
      - name: nginx
        image: nginx
        imagePullPolicy: IfNotPresent
        volumeMounts:              #挂载下面创建的share-volume本地数据卷到容器里/opt下
        - mountPath: /tmp
          name: sharev
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:                            #创建一个名字是share-volume的本地数据卷
      - name: sharev
        emptyDir: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
